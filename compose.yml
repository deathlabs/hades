services:

  rabbitmq:
    profiles: [ all, rabbitmq ]
    build: rabbitmq
    image: ${CONTAINER_REGISTRY}/${CI_PROJECT_PATH}/rabbitmq:${RABBITMQ_VERSION}
    container_name: ${APP_NAME}-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env.local
      - .env.local.secrets
    healthcheck:
      start_period: 15s
      test: [ "CMD", "rabbitmq-diagnostics", "-q", "ping" ]
      timeout: 3s
      interval: 5s
      retries: 5

  mcp-server:
    profiles: [ mcp-server ]
    build: mcp-server
    image: ${CONTAINER_REGISTRY}/${CI_PROJECT_PATH}/mcp-server:${BACKEND_VERSION}
    container_name: ${APP_NAME}-mcp-server
    ports:
      - "8001:8001"
    env_file:
      - .env.local
      - .env.local.secrets

  backend:
    profiles: [ all, backend ]
    build: backend
    image: ${CONTAINER_REGISTRY}/${CI_PROJECT_PATH}/backend:${BACKEND_VERSION}
    container_name: ${APP_NAME}-backend
    ports:
      - "8888:8888"
    env_file:
      - .env.local
      - .env.local.secrets

  frontend:
    profiles: [ all, frontend ]
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        VITE_BACKEND: localhost:8888
        PORT: 5173
    image: ${CONTAINER_REGISTRY}/${CI_PROJECT_PATH}/frontend:${FRONTEND_VERSION}
    container_name: ${APP_NAME}-frontend
    ports:
      - "80:5173"
    env_file:
      - .env.local
      - .env.local.secrets

  llama:
    profiles: [ all, llama ]
    build: llama
    image: ${CONTAINER_REGISTRY}/${CI_PROJECT_PATH}/llama:${LLAMA_VERSION}
    container_name: ${APP_NAME}-llama
    ports:
      - "9999:9999"
    env_file:
      - .env.local
      - .env.local.secrets
    healthcheck:
      test: [ "CMD", "curl", "http://localhost:9999/healthcheck" ]
      timeout: 3s
      interval: 5s
      retries: 5
